{"version":3,"sources":["component/home.js","component/charts.js","component/history.js","component/data-user.js","component/login.js","App.js","serviceWorker.js","index.js"],"names":["Home","icon","type","theme","title","extra","size","style","height","Charts","props","state","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","span","this","width","options","maintainAspectRatio","display","text","fontSize","React","Component","key","name","date","address","value","History","searchText","searchedColumn","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","placeholder","onChange","e","target","onPressEnter","handleSearch","marginBottom","onClick","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","highlightStyle","searchWords","autoEscape","textToHighlight","setState","columns","total","i","length","dataSource","Infor","Group","defaultValue","buttonStyle","Button","background","NormalLoginForm","handleSubmit","preventDefault","form","validateFields","err","values","fetch","headers","method","body","username","password","then","response","res","json","console","log","catch","error","getFieldDecorator","onSubmit","className","Item","rules","required","message","prefix","pattern","Password","href","htmlType","float","LoginForm","create","Header","Footer","Sider","App","logOut","isLogin","path","component","minHeight","breakpoint","collapsedWidth","defaultSelectedKeys","mode","to","exact","textAlign","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ddac0f2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Result, Icon, Spin } from \"antd\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Result\r\n      icon={<Icon type=\"smile\" theme=\"twoTone\" />}\r\n      title=\"Hello, Welcome Here!\"\r\n      extra={<Spin size=\"large\" />}\r\n      style={{ height: \"78vh\" }}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Bar, Pie,Line } from \"react-chartjs-2\";\r\nimport { Col, Row } from \"antd\";\r\nclass Charts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: {\r\n        labels: [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          'August',\r\n          'Septemper',\r\n          'October',\r\n          'November',\r\n          'December'\r\n\r\n        ],\r\n        datasets: [\r\n          {\r\n            label: \"My First dataset\",\r\n            backgroundColor: \"rgba(255,99,132,0.2)\",\r\n            borderColor: \"rgba(255,99,132,1)\",\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n            hoverBorderColor: \"rgba(255,99,132,1)\",\r\n            data: [65, 59, 80, 81, 56, 55, 40]\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col span={12}>\r\n            {\" \"}\r\n            <Bar\r\n              data={this.state.chartData}\r\n              width={100}\r\n              height={50}\r\n              options={{\r\n                maintainAspectRatio: true,\r\n                display: true,\r\n                text: \"Chart Demo\",\r\n                fontSize: 25\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col span={12}>\r\n            <Line\r\n              data={this.state.chartData}\r\n              width={100}\r\n              height={50}\r\n              options={{\r\n                maintainAspectRatio: true,\r\n                display: false,\r\n                text: \"Chart Demo\",\r\n                fontSize: 25\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Charts;\r\n","import React from \"react\";\r\nimport { Table, Input, Button, Icon } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nconst data = [\r\n  {\r\n    key: \"1\",\r\n    name: \"John Brown\",\r\n    date: 1,\r\n    address: \"New York No. 1 Lake Park\",\r\n    value: 100000\r\n  },\r\n  {\r\n    key: \"2\",\r\n    name: \"Joe Black\",\r\n    date: 1,\r\n    address: \"London No. 1 Lake Park\",\r\n    value: 100000\r\n  },\r\n  {\r\n    key: \"3\",\r\n    name: \"Jim Green\",\r\n    date: 1,\r\n    address: \"Sidney No. 1 Lake Park\",\r\n    value: 100000\r\n  },\r\n  {\r\n    key: \"4\",\r\n    name: \"Jim Red\",\r\n    date: 1,\r\n    address: \"London No. 2 Lake Park\",\r\n    value: 100000\r\n  }\r\n];\r\n\r\nclass History extends React.Component {\r\n  state = {\r\n    searchText: \"\",\r\n    searchedColumn: \"\"\r\n  };\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          icon=\"search\"\r\n          size=\"small\"\r\n          style={{ width: 90, marginRight: 8 }}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button\r\n          onClick={() => this.handleReset(clearFilters)}\r\n          size=\"small\"\r\n          style={{ width: 90 }}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => (\r\n      <Icon type=\"search\" style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select());\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      ) : (\r\n        text\r\n      )\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"30%\",\r\n        ...this.getColumnSearchProps(\"name\")\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        width: \"20%\",\r\n        ...this.getColumnSearchProps(\"date\")\r\n      },\r\n      {\r\n        title: \"Address\",\r\n        dataIndex: \"address\",\r\n        key: \"address\",\r\n        width: \"30%\",\r\n        ...this.getColumnSearchProps(\"address\")\r\n      },\r\n      {\r\n        title: \"Value\",\r\n        dataIndex: \"value\",\r\n        key: \"value\",\r\n        width: \"20%\"\r\n        // ...this.getColumnSearchProps('value'),\r\n      }\r\n    ];\r\n     let total=0;\r\n     for(let i=0;i<data.length;i++){\r\n         total+=data[i].value;\r\n     }\r\n    return (\r\n      <>\r\n        <span>Total: {total} </span>\r\n        <Table columns={columns} dataSource={data} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default History;\r\n","import React from \"react\";\r\nimport {Radio,Button} from 'antd';\r\nfunction Infor() {\r\n  return (\r\n    <div>\r\n      <Radio.Group\r\n        defaultValue=\"a\"\r\n        buttonStyle=\"solid\"\r\n        style={{ padding: \".5rem 1rem\" }}\r\n      >\r\n        <Radio.Button value=\"a\" >\r\n         Information\r\n        </Radio.Button>\r\n        <Radio.Button value=\"b\" >\r\n          Update\r\n        </Radio.Button>\r\n      </Radio.Group>\r\n      <div style={{padding: 24,background: \"#fff\", height: \"90vh\" }}>\r\n        <p>UserName</p>\r\n        <p>Email</p>\r\n        <p>Password</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Infor;\r\n","import React from \"react\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\n\r\nclass NormalLoginForm extends React.Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        fetch(\"http://171.244.141.231:9001/auth/login/\", {\r\n          headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          method: \"POST\",\r\n          body: `partnerName=${values.username}&password=${values.password}`\r\n        })\r\n          .then(function(response) {\r\n            let res = response.json();\r\n            // return res;\r\n            console.log(res);\r\n          })\r\n          .catch(function(error) {\r\n            console.log(\"Request failed\", error);\r\n          });\r\n        // console.log(\"Received values of form: \", values);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        <Form.Item>\r\n          {getFieldDecorator(\"username\", {\r\n            rules: [{ required: true, message: \"Please input your username!\" }]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"Username\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              { required: true, message: \"Please input your Password!\" },\r\n              {\r\n                pattern: \"^(?=.{8,})\",\r\n                message: \"Password must be 8 characters or longer !\"\r\n              }\r\n            ]\r\n          })(\r\n            <Input.Password\r\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item className=\"btn-submit\">\r\n          <a className=\"login-form-forgot\" href=\"\" style={{ width: \"50%\" }}>\r\n            Forgot password\r\n          </a>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n            style={{ float: \"right\" }}\r\n          >\r\n            Log in\r\n          </Button>\r\n          <br />\r\n          Or <a href=\"\">register now!</a>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginForm = Form.create({ name: \"normal_login\" })(NormalLoginForm);\r\nexport default LoginForm;\r\n","import React from \"react\";\nimport { Layout, Menu, Icon } from \"antd\";\nimport Home from \"./component/home\";\nimport Charts from \"./component/charts\";\nimport History from \"./component/history\";\nimport Infor from \"./component/data-user\";\nimport LoginForm from './component/login';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nconst { Header, Footer, Sider } = Layout;\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin:false\n    };\n  }\n  logOut=()=>{\n    this.setState({\n      isLogin:false\n    })\n  }\n  render() {\n    const {isLogin}=this.state;\n    if(isLogin==false){\n      return (\n        <Router>\n          <Route path=\"/\" component={LoginForm} />\n        </Router>\n      )\n    };\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Router>\n          <Sider breakpoint=\"md\" collapsedWidth=\"0\">\n            <div className=\"logo\">Admin</div>\n            <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n              <Menu.Item key=\"1\">\n                <Link to=\"/\">\n                  <Icon type=\"home\" theme=\"filled\" />\n                  <span>Home</span>\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <Link to=\"/charts\">\n                  <span>\n                    <Icon type=\"area-chart\" />\n                    Charts\n                  </span>\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <Link to=\"/history\">\n                  <span>\n                    <Icon type=\"schedule\" />\n                    History\n                  </span>\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"4\">\n                <Link to=\"/inforusers\">\n                  <Icon type=\"idcard\" theme=\"filled\" />\n\n                  <span>Users</span>\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"5\"onClick={this.logOut}>\n                  <Icon type=\"idcard\" theme=\"filled\" />\n                  <span>Login</span>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Header style={{ background: \"#fff\", padding: 0 }}></Header>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/charts\" component={Charts} />\n\n            <Route exact path=\"/history\" component={History} />\n            <Route exact path=\"/inforusers\" component={Infor} />\n            {/* <Route path=\"/products/:id\" component={Edit}/> */}\n            <Footer style={{ textAlign: \"center\" }}>\n              Client_Partner_App ©2019\n            </Footer>\n          </Layout>\n        </Router>\n      </Layout>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}