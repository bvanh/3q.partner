{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\client_partner\\\\src\\\\component\\\\history.js\";\nimport React from \"react\";\nimport Type from \"./options/type\";\nimport fetch from \"isomorphic-unfetch\";\nimport { url } from \"./api\";\nconst Search = _Input.Search;\n\nclass History extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = (pathName, pathSearch) => {\n      let userAccessToken = localStorage.getItem(\"user\");\n      fetch(url + pathName + pathSearch, {\n        headers: {\n          Authorization: `Bearer ${JSON.parse(userAccessToken).accessToken}`,\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        method: \"GET\"\n      }).then(response => response.json()).then(result => this.setState({\n        data: result.rows\n      })).catch(function (error) {\n        console.log(\"Request failed\", error);\n      });\n    };\n\n    this.handleMenuClick = async e => {\n      const _this$state = this.state,\n            type = _this$state.type,\n            startTime = _this$state.startTime,\n            endTime = _this$state.endTime,\n            search = _this$state.search;\n      await this.setState({\n        type: Number(e.key)\n      });\n      await this.props.history.replace(`/charges/list?currentPage=1&pageSize=10&search=${search}&type=${type}&fromDate=${startTime}&toDate=${endTime}`);\n      this.getData(this.props.location.pathname, this.props.location.search);\n      console.log(e);\n    };\n\n    this.filterDate = async (startDate, endDate, value) => {\n      await this.setState({\n        startTime: startDate,\n        endTime: endDate,\n        search: value\n      });\n      const _this$state2 = this.state,\n            type = _this$state2.type,\n            startTime = _this$state2.startTime,\n            endTime = _this$state2.endTime,\n            search = _this$state2.search;\n      await this.props.history.replace(`/charges/list?currentPage=1&pageSize=10&search=${search}&type=${type}&fromDate=${startTime}&toDate=${endTime}`);\n      this.getData(this.props.location.pathname, this.props.location.search);\n    };\n\n    this.state = {\n      data: null,\n      currentPage: 1,\n      pageSize: 10,\n      userToken: JSON.parse(this.props.userToken),\n      type: 1,\n      search: \"\",\n      startTime: \"2019-10-1\",\n      endTime: \"2019-12-30\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.location);\n    this.getData(this.props.location.pathname, this.props.location.search);\n  }\n\n  // filterPartnerId=(value)=>{\n  //   const {type, startTime, endTime, search } = this.state;\n  //   this.setState({\n  //     search:value\n  //   });\n  //   await this.props.history.replace(\n  //     `/charges/list?currentPage=1&pageSize=10&search=${search}&type=${type}&fromDate=${startTime}&toDate=${endTime}`\n  //   );\n  //   await this.getData(\n  //     this.props.location.pathname,\n  //     this.props.location.search\n  //   );\n  // }\n  render() {\n    const columns = [{\n      title: \"PartnerChargeId\",\n      dataIndex: \"partnerChargeId\",\n      key: \"partnerChargeId\",\n      width: \"25%\"\n    }, {\n      title: \"ProductId\",\n      dataIndex: \"productId\",\n      key: \"productId\",\n      width: \"20%\"\n    }, {\n      title: \"UserId\",\n      dataIndex: \"userId\",\n      key: \"userId\",\n      width: \"20%\"\n    }, {\n      title: \"Coin\",\n      dataIndex: \"coin\",\n      key: \"coin\",\n      width: \"5%\"\n    },, {\n      title: \"Value\",\n      dataIndex: \"vnd\",\n      key: \"vnd\",\n      width: \"10%\",\n      render: price => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, price.toLocaleString(), \" \\u0111\")\n    }, {\n      title: \"CreateAt\",\n      dataIndex: \"createAt\",\n      key: \"createAt\",\n      width: \"20%\"\n    }]; // let total = 0;\n    // for (let i = 0; i < data.length; i++) {\n    //   total += data[i].value;\n    // }\n\n    const _this$state3 = this.state,\n          data = _this$state3.data,\n          startTime = _this$state3.startTime,\n          endTime = _this$state3.endTime;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"btn-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Type, {\n      handleMenuClick: this.handleMenuClick,\n      filterDate: this.filterDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Search, {\n      placeholder: \"Search...\",\n      onSearch: value => this.filterDate(startTime, endTime, value),\n      enterButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(_Table, {\n      columns: columns,\n      dataSource: data,\n      rowKey: record => record.partnerChargeId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default History;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/client_partner/src/component/history.js"],"names":["React","Type","fetch","url","Search","History","Component","constructor","props","getData","pathName","pathSearch","userAccessToken","localStorage","getItem","headers","Authorization","JSON","parse","accessToken","method","then","response","json","result","setState","data","rows","catch","error","console","log","handleMenuClick","e","state","type","startTime","endTime","search","Number","key","history","replace","location","pathname","filterDate","startDate","endDate","value","currentPage","pageSize","userToken","componentDidMount","render","columns","title","dataIndex","width","price","toLocaleString","record","partnerChargeId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Table, Input } from \"antd\";\nimport Type from \"./options/type\";\nimport fetch from \"isomorphic-unfetch\";\nimport { url } from \"./api\";\nconst { Search } = Input;\nclass History extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      currentPage: 1,\n      pageSize: 10,\n      userToken: JSON.parse(this.props.userToken),\n      type: 1,\n      search: \"\",\n      startTime: \"2019-10-1\",\n      endTime: \"2019-12-30\"\n    };\n  }\n  getData = (pathName, pathSearch) => {\n    let userAccessToken = localStorage.getItem(\"user\");\n    fetch(url + pathName + pathSearch, {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(userAccessToken).accessToken}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      method: \"GET\"\n    })\n      .then(response => response.json())\n      .then(result =>\n        this.setState({\n          data: result.rows\n        })\n      )\n      .catch(function(error) {\n        console.log(\"Request failed\", error);\n      });\n  };\n  componentDidMount() {\n    console.log(this.props.location);\n    this.getData(this.props.location.pathname, this.props.location.search);\n  }\n  handleMenuClick = async e => {\n    const { type, startTime, endTime, search } = this.state;\n    await this.setState({\n      type: Number(e.key)\n    });\n    await this.props.history.replace(\n      `/charges/list?currentPage=1&pageSize=10&search=${search}&type=${type}&fromDate=${startTime}&toDate=${endTime}`\n    );\n    this.getData(this.props.location.pathname, this.props.location.search);\n    console.log(e);\n  };\n  filterDate = async (startDate, endDate, value) => {\n    await this.setState({\n      startTime: startDate,\n      endTime: endDate,\n      search: value\n    });\n    const { type, startTime, endTime, search } = this.state;\n    await this.props.history.replace(\n      `/charges/list?currentPage=1&pageSize=10&search=${search}&type=${type}&fromDate=${startTime}&toDate=${endTime}`\n    );\n    this.getData(\n      this.props.location.pathname,\n      this.props.location.search\n    );\n  };\n  // filterPartnerId=(value)=>{\n  //   const {type, startTime, endTime, search } = this.state;\n  //   this.setState({\n  //     search:value\n  //   });\n  //   await this.props.history.replace(\n  //     `/charges/list?currentPage=1&pageSize=10&search=${search}&type=${type}&fromDate=${startTime}&toDate=${endTime}`\n  //   );\n  //   await this.getData(\n  //     this.props.location.pathname,\n  //     this.props.location.search\n  //   );\n  // }\n  render() {\n    const columns = [\n      {\n        title: \"PartnerChargeId\",\n        dataIndex: \"partnerChargeId\",\n        key: \"partnerChargeId\",\n        width: \"25%\"\n      },\n      {\n        title: \"ProductId\",\n        dataIndex: \"productId\",\n        key: \"productId\",\n        width: \"20%\"\n      },\n      {\n        title: \"UserId\",\n        dataIndex: \"userId\",\n        key: \"userId\",\n        width: \"20%\"\n      },\n      {\n        title: \"Coin\",\n        dataIndex: \"coin\",\n        key: \"coin\",\n        width: \"5%\"\n      },\n      ,\n      {\n        title: \"Value\",\n        dataIndex: \"vnd\",\n        key: \"vnd\",\n        width: \"10%\",\n        render: price => <span>{price.toLocaleString()} đ</span>\n      },\n      {\n        title: \"CreateAt\",\n        dataIndex: \"createAt\",\n        key: \"createAt\",\n        width: \"20%\"\n      }\n    ];\n    // let total = 0;\n    // for (let i = 0; i < data.length; i++) {\n    //   total += data[i].value;\n    // }\n    const { data, startTime, endTime } = this.state;\n    return (\n      <>\n        {/* <span>Total: {total} </span> */}\n        <div className=\"btn-check\">\n          <Type\n            handleMenuClick={this.handleMenuClick}\n            filterDate={this.filterDate}\n          />\n          <Search\n            placeholder=\"Search...\"\n            onSearch={value=>this.filterDate(startTime,endTime,value)}\n            enterButton\n          />\n        </div>\n        <Table\n          columns={columns}\n          dataSource={data}\n          rowKey={record => record.partnerChargeId}\n        />\n      </>\n    );\n  }\n}\n\nexport default History;\n"]},"metadata":{},"sourceType":"module"}