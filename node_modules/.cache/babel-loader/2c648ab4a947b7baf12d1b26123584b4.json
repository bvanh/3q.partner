{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport _objectSpread from \"C:\\\\Users\\\\buianh\\\\Desktop\\\\Gitlab\\\\client_partner\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"C:\\\\Users\\\\buianh\\\\Desktop\\\\Gitlab\\\\client_partner\\\\src\\\\component\\\\history.js\";\nimport React from \"react\";\nimport Highlighter from \"react-highlight-words\";\nconst data = [{\n  key: \"1\",\n  name: \"John Brown\",\n  date: 1,\n  address: \"New York No. 1 Lake Park\",\n  value: 100000\n}, {\n  key: \"2\",\n  name: \"Joe Black\",\n  date: 1,\n  address: \"London No. 1 Lake Park\",\n  value: 100000\n}, {\n  key: \"3\",\n  name: \"Jim Green\",\n  date: 1,\n  address: \"Sidney No. 1 Lake Park\",\n  value: 100000\n}, {\n  key: \"4\",\n  name: \"Jim Red\",\n  date: 1,\n  address: \"London No. 2 Lake Park\",\n  value: 100000\n}];\n\nclass History extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: \"\",\n      searchedColumn: \"\"\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => React.createElement(\"div\", {\n        style: {\n          padding: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        ref: node => {\n          this.searchInput = node;\n        },\n        placeholder: `Search ${dataIndex}`,\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: \"block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(_Button, {\n        type: \"primary\",\n        onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n        icon: \"search\",\n        size: \"small\",\n        style: {\n          width: 90,\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Search\"), React.createElement(_Button, {\n        onClick: () => this.handleReset(clearFilters),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Reset\")),\n      filterIcon: filtered => React.createElement(_Icon, {\n        type: \"search\",\n        style: {\n          color: filtered ? \"#1890ff\" : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text => this.state.searchedColumn === dataIndex ? React.createElement(Highlighter, {\n        highlightStyle: {\n          backgroundColor: \"#ffc069\",\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }) : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: \"\"\n      });\n    };\n  }\n\n  render() {\n    const columns = [_objectSpread({\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\"\n    }, this.getColumnSearchProps(\"name\")), _objectSpread({\n      title: \"Date\",\n      dataIndex: \"date\",\n      key: \"date\",\n      width: \"20%\"\n    }, this.getColumnSearchProps(\"date\")), _objectSpread({\n      title: \"Address\",\n      dataIndex: \"address\",\n      key: \"address\",\n      width: \"30%\"\n    }, this.getColumnSearchProps(\"address\")), {\n      title: \"Value\",\n      dataIndex: \"value\",\n      key: \"value\",\n      width: \"20%\" // ...this.getColumnSearchProps('value'),\n\n    }];\n    let total = 0;\n\n    for (let i = 0; i < data.length; i++) {\n      total += data[i].value;\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Total: \", total, \" \"), React.createElement(_Table, {\n      columns: columns,\n      dataSource: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default History;","map":{"version":3,"sources":["C:/Users/buianh/Desktop/Gitlab/client_partner/src/component/history.js"],"names":["React","Highlighter","data","key","name","date","address","value","History","Component","state","searchText","searchedColumn","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","setState","columns","title","total","i","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Table, Input, Button, Icon } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nconst data = [\r\n  {\r\n    key: \"1\",\r\n    name: \"John Brown\",\r\n    date: 1,\r\n    address: \"New York No. 1 Lake Park\",\r\n    value: 100000\r\n  },\r\n  {\r\n    key: \"2\",\r\n    name: \"Joe Black\",\r\n    date: 1,\r\n    address: \"London No. 1 Lake Park\",\r\n    value: 100000\r\n  },\r\n  {\r\n    key: \"3\",\r\n    name: \"Jim Green\",\r\n    date: 1,\r\n    address: \"Sidney No. 1 Lake Park\",\r\n    value: 100000\r\n  },\r\n  {\r\n    key: \"4\",\r\n    name: \"Jim Red\",\r\n    date: 1,\r\n    address: \"London No. 2 Lake Park\",\r\n    value: 100000\r\n  }\r\n];\r\n\r\nclass History extends React.Component {\r\n  state = {\r\n    searchText: \"\",\r\n    searchedColumn: \"\"\r\n  };\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          icon=\"search\"\r\n          size=\"small\"\r\n          style={{ width: 90, marginRight: 8 }}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button\r\n          onClick={() => this.handleReset(clearFilters)}\r\n          size=\"small\"\r\n          style={{ width: 90 }}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => (\r\n      <Icon type=\"search\" style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select());\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      ) : (\r\n        text\r\n      )\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"30%\",\r\n        ...this.getColumnSearchProps(\"name\")\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        width: \"20%\",\r\n        ...this.getColumnSearchProps(\"date\")\r\n      },\r\n      {\r\n        title: \"Address\",\r\n        dataIndex: \"address\",\r\n        key: \"address\",\r\n        width: \"30%\",\r\n        ...this.getColumnSearchProps(\"address\")\r\n      },\r\n      {\r\n        title: \"Value\",\r\n        dataIndex: \"value\",\r\n        key: \"value\",\r\n        width: \"20%\"\r\n        // ...this.getColumnSearchProps('value'),\r\n      }\r\n    ];\r\n     let total=0;\r\n     for(let i=0;i<data.length;i++){\r\n         total+=data[i].value;\r\n     }\r\n    return (\r\n      <>\r\n        <span>Total: {total} </span>\r\n        <Table columns={columns} dataSource={data} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default History;\r\n"]},"metadata":{},"sourceType":"module"}