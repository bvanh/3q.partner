{"ast":null,"code":"import fetch from \"isomorphic-unfetch\";\nimport { url } from \"../api\";\n\nconst getToken = () => {\n  let userToken = localStorage.getItem(\"userToken\");\n\n  if (userToken === null) {\n    return false;\n  } else fetch(url + `/auth/renew/token/access`, {\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    method: \"POST\",\n    body: `refreshToken=${JSON.parse(userToken).refreshToken}`\n  }).then(response => response.json()).then(result => localStorage.setItem(\"user\", JSON.stringify(result))).catch(function (error) {\n    console.log(\"Request failed\", error);\n  });\n};\n\nexport default getToken;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/client_partner/src/component/options/refreshToken.js"],"names":["fetch","url","getToken","userToken","localStorage","getItem","headers","method","body","JSON","parse","refreshToken","then","response","json","result","setItem","stringify","catch","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,GAAT,QAAoB,QAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,MAAIC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAhB;;AACA,MAAIF,SAAS,KAAK,IAAlB,EAAwB;AACtB,WAAO,KAAP;AACD,GAFD,MAGEH,KAAK,CAACC,GAAG,GAAI,0BAAR,EAAmC;AACtCK,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAD6B;AAItCC,IAAAA,MAAM,EAAE,MAJ8B;AAKtCC,IAAAA,IAAI,EAAG,gBAAeC,IAAI,CAACC,KAAL,CAAWP,SAAX,EAAsBQ,YAAa;AALnB,GAAnC,CAAL,CAOGC,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQQG,MAAM,IAAIX,YAAY,CAACY,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACQ,SAAL,CAAeF,MAAf,CAA7B,CARlB,EASGG,KATH,CASS,UAASC,KAAT,EAAgB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B;AACD,GAXH;AAYH,CAjBD;;AAkBA,eAAejB,QAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport { url } from \"../api\";\n\nconst getToken = () => {\n  let userToken = localStorage.getItem(\"userToken\");\n  if (userToken === null) {\n    return false;\n  } else\n    fetch(url + `/auth/renew/token/access`, {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      method: \"POST\",\n      body: `refreshToken=${JSON.parse(userToken).refreshToken}`\n    })\n      .then(response => response.json())\n      .then(result => localStorage.setItem(\"user\", JSON.stringify(result)))\n      .catch(function(error) {\n        console.log(\"Request failed\", error);\n      });\n};\nexport default getToken;\n"]},"metadata":{},"sourceType":"module"}